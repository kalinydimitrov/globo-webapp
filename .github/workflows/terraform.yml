name: 'Terraform App Config'

on:
  push:
    branches: [ '**' ]
  
  pull_request:
    branches: [ '**' ]
  

env:
  TF_LOG: INFO
  TF_INPUT: false
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
      TF_VAR_prefix:              ${{ vars.PREFIX }}
      TF_VAR_environment:         ${{ vars.ENVIRONMENT }}
      TF_VAR_billing_code:        ${{ vars.BILLING_CODE }}
      TF_VAR_api_key:             ${{ vars.API_KEY }}
      TF_VAR_tfe_organization:    ${{ vars.TFE_ORGANIZATION }}
      TF_VAR_tfe_workspace_name:  ${{ vars.TFE_WORKSPACE_NAME }}
      TF_VAR_playbook_repository: ${{ vars.PLAYBOOK_REPOSITORY }}

    # Use the Bash shell regardless whether the GitHub Actions runner is 
    # ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        # working-directory: .

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Use repo secrets: Settings > Secrets and variables > Actions
    - name: Configure AWS credentials (keys)
      uses: aws-actions/configure-aws-credentials@v4
      with:
         aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region:            ${{ env.AWS_REGION }}

    # Install the preferred version of Terraform CLI of
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    # Run a terraform fmt for push
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    # Run a terraform validate
    # Run even if formatting fails
    - name: Terraform Validate
      id: validate
      if: (success() || failure())
      run: terraform validate

    # Run a terraform plan to create an execution plan
    - name: Terraform Plan
      run: terraform plan -no-color -out=tf.plan

    - name: Upload plan
      uses: actions/upload-artifact@v4
      with:
        name: tf-plan
        path: tf.plan

    - name: Terraform Apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -no-color -input=false tf.plan